# Interface definition for thorn Z4cowCarpet
# $Header$

implements: Z4cowCarpet

inherits:   ADMBase Boundary GenericFD Grid TmunuBase

USES INCLUDE: Symmetry.h

CCTK_INT FUNCTION MoLRegisterEvolved(CCTK_INT IN EvolvedIndex, \
                                     CCTK_INT IN RHSIndex)
CCTK_INT FUNCTION MoLRegisterConstrained(CCTK_INT IN ConstrainedIndex)
CCTK_INT FUNCTION MoLRegisterSaveAndRestore(CCTK_INT IN SandRIndex)
CCTK_INT FUNCTION MoLChangeToEvolved(CCTK_INT IN EvolvedIndex, \
                                     CCTK_INT IN RHSIndex)
CCTK_INT FUNCTION MoLChangeToConstrained(CCTK_INT IN ConstrainedIndex)
CCTK_INT FUNCTION MoLChangeToSaveAndRestore(CCTK_INT IN SandRIndex)
CCTK_INT FUNCTION MoLChangeToNone(CCTK_INT IN RemoveIndex)

USES FUNCTION MoLRegisterEvolved
USES FUNCTION MoLRegisterConstrained
USES FUNCTION MoLRegisterSaveAndRestore
USES FUNCTION MoLChangeToEvolved
USES FUNCTION MoLChangeToConstrained
USES FUNCTION MoLChangeToSaveAndRestore
USES FUNCTION MoLChangeToNone

CCTK_INT FUNCTION Boundary_SelectGroupForBC(CCTK_POINTER_TO_CONST IN cctkGH,
  CCTK_INT IN faces, CCTK_INT IN width, CCTK_INT IN table_handle,
  CCTK_STRING IN var_name, CCTK_STRING IN bc_name)
USES FUNCTION Boundary_SelectGroupForBC

public:

# Evolution variables

CCTK_REAL W TYPE=gf TIMELEVELS=4 TAGS='' "W"
CCTK_REAL gamma_tilde TYPE=gf TIMELEVELS=4 TAGS='' { gammatxx gammatxy gammatxz gammatyy gammatyz gammatzz } "gamma-tilde"
CCTK_REAL K_hat TYPE=gf TIMELEVELS=4 TAGS='' { Kh } "K-hat"
CCTK_REAL A_tilde TYPE=gf TIMELEVELS=4 TAGS='' { Atxx Atxy Atxz Atyy Atyz Atzz } "A-tilde"
CCTK_REAL Gam_tilde TYPE=gf TIMELEVELS=4 TAGS='' { Gamtx Gamty Gamtz } "Gamma-tilde"
CCTK_REAL Theta TYPE=gf TIMELEVELS=4 TAGS='' "Theta"
CCTK_REAL alphaG TYPE=gf TIMELEVELS=4 TAGS='' "alpha"
CCTK_REAL betaG TYPE=gf TIMELEVELS=4 TAGS='' { betaGx betaGy betaGz } "beta"

CCTK_REAL ZtC TYPE=gf TAGS='parities={-1 +1 +1   +1 -1 +1   +1 +1 -1} checkpoint="no"' { ZtCx ZtCy ZtCz } "Z-tilde"
CCTK_REAL HC TYPE=gf TAGS='checkpoint="no"' "H"
CCTK_REAL MtC TYPE=gf TAGS='parities={-1 +1 +1   +1 -1 +1   +1 +1 -1} checkpoint="no"' { MtCx MtCy MtCz } "M-tilde"
CCTK_REAL allC TYPE=gf TAGS='checkpoint="no"' "constraint monitor"

CCTK_REAL W_rhs TYPE=gf TAGS='checkpoint="no"' "W"
CCTK_REAL gamma_tilde_rhs TYPE=gf TAGS='checkpoint="no"' { gammatxx_rhs gammatxy_rhs gammatxz_rhs gammatyy_rhs gammatyz_rhs gammatzz_rhs } "gamma-tilde"
CCTK_REAL K_hat_rhs TYPE=gf TAGS='checkpoint="no"' { Kh_rhs } "K-hat"
CCTK_REAL A_tilde_rhs TYPE=gf TAGS='checkpoint="no"' { Atxx_rhs Atxy_rhs Atxz_rhs Atyy_rhs Atyz_rhs Atzz_rhs } "A-tilde"
CCTK_REAL Gam_tilde_rhs TYPE=gf TAGS='checkpoint="no"' { Gamtx_rhs Gamty_rhs Gamtz_rhs } "Gamma-tilde"
CCTK_REAL Theta_rhs TYPE=gf TAGS='checkpoint="no"' "Theta"
CCTK_REAL alphaG_rhs TYPE=gf TAGS='checkpoint="no"' "alpha"
CCTK_REAL betaG_rhs TYPE=gf TAGS='checkpoint="no"' { betaGx_rhs betaGy_rhs betaGz_rhs } "beta"
